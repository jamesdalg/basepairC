% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_replicates.R
\name{read_replicates}
\alias{read_replicates}
\title{Read Replicates and Process Data}
\usage{
read_replicates(
  replicate_files,
  conditions,
  start_row = 61982445,
  end_row = 61988445,
  start_col = 61982445,
  end_col = 61988445,
  bin_size = 1,
  chr = "chr15",
  cap = 30,
  thresh = 2,
  quantile = 0.9999,
  return_dgel = F,
  scn = T,
  make_symmetric = T,
  cores = 1,
  reorder = T,
  apply_fun = pbmcapply::pbmclapply,
  n_resamples = 2,
  equalize_sample_coverage = F,
  verbose = F,
  python = F
)
}
\arguments{
\item{replicate_files}{A character vector of paths to replicate files.}

\item{conditions}{A vector specifying the condition/group for each replicate.}

\item{start_row}{The starting row position for genomic range (default: 61982445).}

\item{end_row}{The ending row position for genomic range (default: 61988445).}

\item{start_col}{The starting column position for genomic range (default: 61982445).}

\item{end_col}{The ending column position for genomic range (default: 61988445).}

\item{bin_size}{The size of the bin for genomic ranges (default: 1).}

\item{chr}{The chromosome to be analyzed (default: "chr15").}

\item{cap}{The maximum value to cap the data at (default: 30).}

\item{thresh}{The threshold below which values are set to zero (default: 2).}

\item{quantile}{The quantile to use for thresholding (default: 0.9999).}

\item{return_dgel}{Logical; if TRUE, returns a DGEList object instead of a list (default: FALSE).}

\item{scn}{Logical; if TRUE, applies SCN correction to the data (default: TRUE).}

\item{make_symmetric}{Logical; if TRUE, makes the matrix symmetric (default: TRUE). Only applies to square matrices.}

\item{n_resamples}{The number of resamples to use for equalizing sample coverage (default: 2).}

\item{equalize_sample_coverage}{Logical; if TRUE, rebalances the sample coverage (default: FALSE).}

\item{verbose}{Logical; if TRUE, prints messages during processing (default: FALSE).}

\item{python}{Logical; if TRUE, uses Python to read the files (default: FALSE).
Test smaller amounts first.
 100 resamples will use ~600GB RAM with 112 cores and 12 samples.}
}
\value{
If `return_dgel` is TRUE, returns a DGEList object with counts and totals.
Otherwise, returns a list containing the processed sample matrix, conditions, loc1, loc2,
underscored_positions_col, underscored_positions_row, and rep_dim.
}
\description{
This function reads replicate files, processes the data through various steps including normalization,
cap and threshold adjustment, optional SCN correction, and returns either a DGEList object or a list
containing the processed sample matrix, conditions, and other metadata. It supports handling of Hi-C data
by converting genomic ranges into matrices and applying several preprocessing steps.
}
\examples{
replicate_files <- c("replicate1.txt", "replicate2.txt")
conditions <- c("condition1", "condition2")
result <- read_replicates(replicate_files, conditions)

}
