% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cpm_filter_rc_norm.R
\name{cpm_filter_rc_norm}
\alias{cpm_filter_rc_norm}
\title{CPM Filter Read Counts Normalization}
\usage{
cpm_filter_rc_norm(rr)
}
\arguments{
\item{rr}{A list containing the following components:
\describe{
  \item{sample_mat}{Matrix of read counts, where rows represent features (e.g., genomic regions) and columns represent samples.}
  \item{conditions}{A vector of conditions corresponding to the samples.}
  \item{loc1}{Numeric vector specifying the first set of genomic locations.}
  \item{loc2}{Numeric vector specifying the second set of genomic locations.}
  \item{rep_dim}{A vector of length 2 specifying the output matrix dimensions (number of rows and columns).}
  \item{underscored_positions_col}{A logical indicating whether to underscore column positions.}
  \item{underscored_positions_row}{A logical indicating whether to underscore row positions.}
}}
}
\value{
A list containing the normalized and filtered read count matrix (`rr_obj`).
}
\description{
This function normalizes and filters read counts using a DESeq2-like method, correcting for conditions 
and other factors provided in the input object. It returns the filtered and normalized read counts.
*Input is the output from read_replicates()*
}
\details{
The function calls `normalizeFilterReadCounts` to normalize read counts using the DESeq2 method 
without estimating dispersion, applying filtering based on differences, and optionally skipping matrices.
}
\examples{
\dontrun{
rr <- list(
  sample_mat = matrix(rnorm(100), nrow=10, ncol=10),
  conditions = factor(rep(c("A", "B"), each=5)),
  loc1 = 1:10,
  loc2 = 11:20,
  rep_dim = c(10, 10),
  underscored_positions_col = TRUE,
  underscored_positions_row = FALSE
)
cpm_filter_rc_norm(rr)
}

}
\seealso{
\code{\link{normalizeFilterReadCounts}}
}
