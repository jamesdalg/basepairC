% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/melt_bias_mat_list.R
\name{melt_bias_mat_list}
\alias{melt_bias_mat_list}
\title{Melt a List of Data Tables Containing Genomic Mapping and GC Data}
\usage{
melt_bias_mat_list(dt_with_map_and_gc_list, ncores = 1)
}
\arguments{
\item{dt_with_map_and_gc_list}{A list of data tables, where each element contains genomic mapping and GC data. The names of the list elements are used as column names in the melted data table.}

\item{ncores}{Integer. The number of cores to use for parallel processing. Default is 1.}
}
\value{
A melted data table containing genomic mapping and GC data in long format. The first table retains the genomic coordinates (`chr1`, `start1`, `end1`, `chr2`, `start2`, `end2`), while the remaining tables are concatenated by their values.
}
\description{
This function takes a list of data tables, each containing genomic mapping and GC data, and melts them into a long format. It optionally uses parallel processing to speed up the operation. The first element of the list retains the genomic coordinates, while the rest are concatenated without the coordinates.
}
\details{
- The function uses `pbapply::pblapply` for parallel processing of each data table in the list.
- The first data table in the list is split into columns `chr1`, `start1`, `end1`, `chr2`, `start2`, `end2` using `tstrsplit`, while subsequent tables only include the melted values without the coordinates.
- The column names `loc1` and `loc2` are used to represent the genomic locations in the first data table, which are split by the separator `_` or space to extract the chromosome and start/end positions.
}
\examples{
# Example usage:
dt_list <- list(dt1 = data.table(matrix(rnorm(25), nrow=5)),
                dt2 = data.table(matrix(rnorm(25), nrow=5)))
names(dt_list) <- c("map_gc_1", "map_gc_2")
result <- melt_bias_mat_list(dt_list, ncores = 2)
head(result)

}
